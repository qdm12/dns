// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/qdm12/dns/v2/pkg/dot/metrics (interfaces: DialMetrics)

// Package dot is a generated GoMock package.
package dot

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDialMetrics is a mock of DialMetrics interface.
type MockDialMetrics struct {
	ctrl     *gomock.Controller
	recorder *MockDialMetricsMockRecorder
}

// MockDialMetricsMockRecorder is the mock recorder for MockDialMetrics.
type MockDialMetricsMockRecorder struct {
	mock *MockDialMetrics
}

// NewMockDialMetrics creates a new mock instance.
func NewMockDialMetrics(ctrl *gomock.Controller) *MockDialMetrics {
	mock := &MockDialMetrics{ctrl: ctrl}
	mock.recorder = &MockDialMetricsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDialMetrics) EXPECT() *MockDialMetricsMockRecorder {
	return m.recorder
}

// DNSDialInc mocks base method.
func (m *MockDialMetrics) DNSDialInc(arg0, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DNSDialInc", arg0, arg1)
}

// DNSDialInc indicates an expected call of DNSDialInc.
func (mr *MockDialMetricsMockRecorder) DNSDialInc(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DNSDialInc", reflect.TypeOf((*MockDialMetrics)(nil).DNSDialInc), arg0, arg1)
}

// DoTDialInc mocks base method.
func (m *MockDialMetrics) DoTDialInc(arg0, arg1, arg2 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DoTDialInc", arg0, arg1, arg2)
}

// DoTDialInc indicates an expected call of DoTDialInc.
func (mr *MockDialMetricsMockRecorder) DoTDialInc(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoTDialInc", reflect.TypeOf((*MockDialMetrics)(nil).DoTDialInc), arg0, arg1, arg2)
}
